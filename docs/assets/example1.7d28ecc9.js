var s='<pre><code class="language-vue"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ScrollWrap</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;props&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#98bec8&quot;</span> <span class="hljs-attr">:long</span>=<span class="hljs-string">&quot;1000&quot;</span> <span class="hljs-attr">:listen</span>=<span class="hljs-string">&quot;listen&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>{{ percentage(props.progress) }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ScrollWrap</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ScrollWrap</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;props&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#e8c3b9&quot;</span> <span class="hljs-attr">:long</span>=<span class="hljs-string">&quot;1200&quot;</span> <span class="hljs-attr">:listen</span>=<span class="hljs-string">&quot;listen&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>{{ percentage(props.progress) }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ScrollWrap</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ScrollWrap</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;props&quot;</span> <span class="hljs-attr">background</span>=<span class="hljs-string">&quot;#9ba5b6&quot;</span> <span class="hljs-attr">:long</span>=<span class="hljs-string">&quot;1000&quot;</span> <span class="hljs-attr">:listen</span>=<span class="hljs-string">&quot;listen&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>{{ percentage(props.progress) }}<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ScrollWrap</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/#/docs/scroll-wrap/-scroll-wrap?preview=true&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">import</span> ScrollWrap <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@pkg/scroll-wrap/ScrollWrap.vue&#x27;</span>\n<span class="hljs-keyword">import</span> { defineComponent, ref, onMounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> defineComponent({\n  <span class="hljs-attr">components</span>: { ScrollWrap },\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">const</span> percentage = <span class="hljs-function">(<span class="hljs-params">p: any</span>) =&gt;</span> (p * <span class="hljs-number">100</span>).toFixed(<span class="hljs-number">2</span>) + <span class="hljs-string">&#x27;%&#x27;</span>\n    <span class="hljs-keyword">const</span> listen: any = ref(<span class="hljs-built_in">window</span>)\n    onMounted(<span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-comment">// 指定了特定的滚动元素，如不指定则默认为window</span>\n      listen.value = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&#x27;.example-content&#x27;</span>)\n    })\n    <span class="hljs-keyword">return</span> {\n      listen,\n      percentage,\n    }\n  },\n})\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="css">\n<span class="hljs-selector-class">.content</span> {\n  <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n  <span class="hljs-attribute">display</span>: flex;\n  <span class="hljs-attribute">justify-content</span>: center;\n  <span class="hljs-attribute">align-items</span>: center;\n  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;\n  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">3vw</span>;\n  <span class="hljs-attribute">font-weight</span>: <span class="hljs-number">600</span>;\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n</code></pre>\n';export{s as default};
